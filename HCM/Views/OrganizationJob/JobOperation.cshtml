@model HCM.Models.OrganizationsJobsViewModel
@using HCM.Classes.Enums
@using HCMBLL.Enums
@using HCM.Models
@using HCM.Classes.Extensions
@{
    ViewBag.Title = Resources.Globalization.OperationOrganizationJobText;
}

<script type="text/javascript">
    $(document).ready(function () {

        var OrganizationID = $("#hdnFldOrganizationID");
        var JobID = $("#hdnFldJobID");
        insertSelectionOptionToDDL('ddlJobsOperationsTypes');
        $('#ddlJobsOperationsTypes').on('change', function (event) {
            if ($(this).val() == '0') {
                hideDivs();
            }
            else {
                hideDivs();
                var JobOperationType = $('#ddlJobsOperationsTypes').val();
                switch (JobOperationType) {
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.Modulation)':
                        $('#divModulation').show();
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.ScalingDown)':
                        $('#divScalingDown').show();
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.PushingUp)':
                        $('#divPushingUp').show();
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.Cancelation)':
                        $('#divCancelation').show();
                        break;
                    default:
                        hideDivs();
                        break;
                }
            }
        });

    });
    function Save(JobOperationType) {

            switch (JobOperationType.toString()) {
                case '@Convert.ToInt32(JobsOperationsTypesEnum.Modulation)':
                                var ObjToPassForAdd =
                                {
                                    OrganizationJobID: '@Model.OrganizationJobID',
                                    OrganizationID: $("#hdnFldOrganizationID").val(),
                                    JobID: $("#hdnFldJobIDModulation").val(),
                                    JobOperationDate: $('#txtJobOperationDateModulation').val()
                                };
                                $.ajax({
                                    type: "POST",
                                    //, dataType: "json"  :  if you pass 'dataType: "json"' then there is always parseerror from .ajax call and return type is 'HttpResponseMessage'
                                    contentType: "application/json; charset=utf-8",
                                    url: "@Url.Content("~/OrganizationJob/SaveModulation")",
                                    data: JSON.stringify(ObjToPassForAdd),
                                    success: OnSuccess,
                                    error: OnFailure
                                });
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.ScalingDown)':
                    console.log('ScalingDown');
                    var ObjToPassForAddScalingDown =
                                {
                                    OrganizationJobID: '@Model.OrganizationJobID',
                                    RankID: $("#ddlRanksScalingDown").val(),
                                    JobNo: $("#txtJobNoScalingDown").val(),
                                    JobOperationDate: $('#txtJobOperationDateScalingDown').val()
                                };
                                $.ajax({
                                    type: "POST",
                                    contentType: "application/json; charset=utf-8",
                                    url: "@Url.Content("~/OrganizationJob/SaveScalingDown")",
                                    data: JSON.stringify(ObjToPassForAddScalingDown),
                                    success: OnSuccess,
                                    error: OnFailure
                                });
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.PushingUp)':
                    console.log('PushingUp');
                    var ObjToPassForAddPushingUp =
                                {
                                    OrganizationJobID: '@Model.OrganizationJobID',
                        RankID: $("#ddlRanksPushingUp").val(),
                        JobNo: $("#txtJobNoPushingUp").val(),
                        JobOperationDate: $('#txtJobOperationDatePushingUp').val()
                                };
                                $.ajax({
                                    type: "POST",
                                    contentType: "application/json; charset=utf-8",
                                    url: "@Url.Content("~/OrganizationJob/SavePushingUp")",
                                    data: JSON.stringify(ObjToPassForAddPushingUp),
                                    success: OnSuccess,
                                    error: OnFailure
                                });
                        break;
                    case '@Convert.ToInt32(JobsOperationsTypesEnum.Cancelation)':
                    console.log('Cancelation');
                    var ObjToPassForAddCancelation =
                                {
                                    OrganizationJobID: '@Model.OrganizationJobID',
                                    JobOperationDate: $('#txtJobOperationDateCancelation').val()
                                };
                                $.ajax({
                                    type: "POST",
                                    contentType: "application/json; charset=utf-8",
                                    url: "@Url.Content("~/OrganizationJob/SaveCancelation")",
                                    data: JSON.stringify(ObjToPassForAddCancelation),
                                    success: OnSuccess,
                                    error: OnFailure
                                });
                        break;

                    default:
                        break;
                }
    }
    function hideDivs() {
        $('#divModulation').hide();
        $('#divScalingDown').hide();
        $('#divPushingUp').hide();
        $('#divCancelation').hide();
    }
    function OnSuccess() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Success, Globals.Utilities.RemoveSpace(@Resources.Globalization.SavedDoneAlertText),"OkFunction")');
    }

    function OkFunction() {
        window.location.href='@Url.Content("~/OrganizationJob/Index")';
    }
    function OnFailure() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Failure, "Error")');
    }

</script>
<p style="font-size:larger">@Resources.Globalization.OperationOrganizationJobText</p>
<div class="panel panel-default" style="padding:0px">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-9">
                @Resources.Globalization.OperationOrganizationJobDescText
            </div>
            <div class="col-md-3" style="text-align:left">

            </div>
        </div>
    </div>
    <div class="panel-body">
         
            <span class="control-label">@Resources.Globalization.OrganizationJobBasicInfoText</span><br />
            <table class="table table-responsive table-condensed table-striped">
                <tbody>
                    <tr>
                        <td class="col-md-2">
                            @Html.LabelFor(model => model.JobNo, new { @class = "control-label" })
                        </td>
                        <td class="col-md-2">
                            @Html.LabelFor(model => model.OrganizationName, new { @class = "control-label" })
                        </td>
                        <td class="col-md-2">
                            @Html.LabelFor(model => model.JobName, new { @class = "control-label" })
                        </td>

                        <td class="col-md-2">
                            @Html.LabelFor(model => model.RankName, new { @class = "control-label" })
                        </td>
                        <td class="col-md-2">
                            @Html.LabelFor(model => model.OrganizationJobStatusID, new { @class = "control-label" })
                        </td>
                        <td class="col-md-2">
                            @Html.LabelFor(model => model.IsVacant)
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.JobNo, new { @class = "form-control", @id = "txtJobNo", @type = "number", @readonly = "readonly" })
                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.OrganizationStructure.OrganizationName, new { @class = "form-control", @id = "txtOrganizationNames", @readonly = "readonly" })

                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.Job.JobName, new { @class = "form-control", @id = "txtJobNames", @readonly = "readonly" })

                        </td>

                        <td class="col-md-2">
                            @Html.DropDownListFor(model => model.RankID, new SelectList(new HCMBLL.RanksBLL().GetRanks(), "RankID", "RankName"), new { @id = "ddlRanks", @style = "width:100%",@disabled= "disabled" })

                        </td>
                        <td class="col-md-2">
                            @Html.DropDownListFor(model => model.OrganizationJobStatusID, new SelectList(new HCMBLL.OrganizationsJobsStatusBLL().GetOrganizationsJobsStatus(), "OrganizationJobStatusID", "OrganizationJobStatusName"), new { @id = "ddlOrganizationsJobsStatus", @style = "width:100%", @disabled = "disabled" })
                        </td>
                        <td class="col-md-2">
                            @Html.CheckBoxFor(model => model.IsVacant, new { @id = "chkIsVacant", @disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-2">
                            @Resources.Globalization.JobOperationTypeText
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-2">
                            @Html.DropDownListFor(model => model.JobOperationType.JobOperationTypeID, new SelectList(new HCMBLL.JobsOperationsTypesBLL().GetJobsOperationsTypes().Where(c => c.JobOperationTypeID != (int)JobsOperationsTypesEnum.Transferring && c.JobOperationTypeID != (int)JobsOperationsTypesEnum.Creation && c.JobOperationTypeID != (int)JobsOperationsTypesEnum.Modification), "JobOperationTypeID", "JobOperationTypeName"), new { @id = "ddlJobsOperationsTypes", @style = "width:100%" })
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                        <td class="col-md-2">
                        </td>
                    </tr>
                </tbody>
            </table>

            <div id="divModulation" class="panel panel-default" style="padding:0px" hidden>
                <div class="panel-heading alert alert-info" role="alert">
                    @Resources.Globalization.ModulationyDescText
                </div>
                <div class="panel-body">
                    <span class="control-label">
                        @Resources.Globalization.ModulationBasicInfoText
                    </span><br />
                    <table class="table">
                        <thead>
                            <tr>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.OrganizationName, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.JobName, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.Label(Resources.Globalization.JobOperationDateText, new { @class = "control-label" })
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="col-md-4">
                                    @Html.Partial("~/Views/Shared/_OrganizationStructurePopup.cshtml", Model.OrganizationStructure)
                                </td>
                                <td class="col-md-4">
                                    @Html.Partial("~/Views/Shared/_JobsPopup.cshtml", new JobsViewModel() { PartialName = "Modulation", JobID = Model.Job.JobID, JobName = Model.Job.JobName })
                                </td>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobOperationDate, new { @class = "TxtHijriPicker form-control", @id = "txtJobOperationDateModulation", @readonly = "readonly" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table table-responsive table-condensed">
                        <tr>
                            <td>
                                <div class="form-group">
                                    <center>
                                        <input type="button" id="BtnSaveModulation" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" onclick='Save(@Convert.ToInt32(JobsOperationsTypesEnum.Modulation))' />
                                    </center>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div id="divScalingDown" class="panel panel-default" style="padding:0px" hidden>
                <div class="panel-heading alert-info" role="alert">
                    @Resources.Globalization.ScalingDownDescText
                </div>
                <div class="panel-body">
                    <span class="control-label">@Resources.Globalization.ScalingDownBasicInfoText</span><br />
                    <table class="table">
                        <thead>
                            <tr>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.JobNo, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.RankName, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.Label(Resources.Globalization.JobOperationDateText, new { @class = "control-label" })
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobNo, new { @class = "form-control", @id = "txtJobNoScalingDown" })
                                </td>
                                <td class="col-md-4">
                                    @Html.DropDownListFor(model => model.RankID, new SelectList(new HCMBLL.RanksBLL().GetByRankCategoryID(Model.Rank.RankCategory.RankCategoryID), "RankID", "RankName"), new { @id = "ddlRanksScalingDown", @style = "width:100%" })
                                </td>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobOperationDate, new { @class = "TxtHijriPicker form-control", @id = "txtJobOperationDateScalingDown", @readonly = "readonly" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table table-responsive table-condensed">
                        <tr>
                            <td>
                                <div class="form-group">
                                    <center>
                                        <input type="button" id="BtnSaveScalingDown" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" onclick='Save(@Convert.ToInt32(JobsOperationsTypesEnum.ScalingDown))' />
                                    </center>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div id="divPushingUp" class="panel panel-default" style="padding:0px" hidden>
                <div class="panel-heading alert alert-info" role="alert">
                    @Resources.Globalization.PushingUpDescText
                </div>
                <div class="panel-body">
                    <span class="control-label">@Resources.Globalization.PushingUpBasicInfoText</span><br />
                    <table class="table">
                        <thead>
                            <tr>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.JobNo, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.LabelFor(model => model.RankName, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                    @Html.Label(Resources.Globalization.JobOperationDateText, new { @class = "control-label" })
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobNo, new { @class = "form-control", @id = "txtJobNoPushingUp" })
                                </td>
                                <td class="col-md-4">
                                    @Html.DropDownListFor(model => model.RankID, new SelectList(new HCMBLL.RanksBLL().GetByRankCategoryID(Model.Rank.RankCategory.RankCategoryID), "RankID", "RankName"), new { @id = "ddlRanksPushingUp", @style = "width:100%" })
                                </td>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobOperationDate, new { @class = "TxtHijriPicker form-control", @id = "txtJobOperationDatePushingUp", @readonly = "readonly" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table table-responsive table-condensed">
                        <tr>
                            <td>
                                <div class="form-group">
                                    <center>
                                        <input type="button" id="BtnSavePushingUp" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" onclick='Save(@Convert.ToInt32(JobsOperationsTypesEnum.PushingUp))' />
                                    </center>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div id="divCancelation" class="panel panel-default" style="padding:0px" hidden>
                <div class="panel-heading alert alert-info" role="alert">
                    @Resources.Globalization.CancelationDescText
                </div>
                <div class="panel-body">
                    <span class="control-label">@Resources.Globalization.CancelationBasicInfoText</span><br />
                    <table class="table">
                        <thead>
                            <tr>
                                <td class="col-md-4">
                                    @Html.Label(Resources.Globalization.JobOperationDateText, new { @class = "control-label" })
                                </td>
                                <td class="col-md-4">
                                </td>
                                <td class="col-md-4">
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="col-md-4">
                                    @Html.TextBoxFor(model => model.JobOperationDate, new { @class = "TxtHijriPicker form-control", @id = "txtJobOperationDateCancelation", @readonly = "readonly" })
                                </td>
                                <td class="col-md-4">
                                </td>
                                <td class="col-md-4">
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table table-responsive table-condensed">
                        <tr>
                            <td>
                                <div class="form-group">
                                    <center>
                                        <input type="button" id="BtnSaveCancelation" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText"  onclick='Save(@Convert.ToInt32(JobsOperationsTypesEnum.Cancelation))'/>
                                    </center>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div> 
      
    </div>
    <div class="panel-footer">
        @using (Html.BeginForm("Index", "OrganizationJob"))
        {
            <input type="submit" class="btn btn-default" name="BtnBack" value="@Resources.Globalization.BacktoListText" />
        }
    </div>
</div>


@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@




