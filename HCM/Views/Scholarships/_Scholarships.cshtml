@model HCM.Models.ScholarshipsViewModel
@using HCMBLL.Enums;
@using HCM.Models;


<script type="text/javascript">

    $(document).ready(function () {

        $('#txtScholarshipStartDate').on('focus', function () {
        }).calendarsPicker({
            calendar: jQuery.calendars.instance('ummalqura', 'ar'),
            onSelect: customRange,
            commandsAsDateFormat: true,
            dateFormat: '@System.Configuration.ConfigurationManager.AppSettings["DateFormatRTL"]',
            onSelect: function (dates) {
                GetScholarshipEndDate();         

            }
        });

        $('#txtScholarshipEndDate').on('focus', function () {
        }).calendarsPicker({
            calendar: jQuery.calendars.instance('ummalqura', 'ar'),
            onSelect: customRange,
            commandsAsDateFormat: true,
            dateFormat: '@System.Configuration.ConfigurationManager.AppSettings["DateFormatRTL"]',
            onSelect: function (dates) {
                if ($('#txtScholarshipStartDate').val() != '') {
                    GetScholarshipFromEndDate();
                }
            }
        });

        $('#txtScholarshipPeriod').on('change', function (event) {
            GetScholarshipEndDate();
        });

        GetQualificationsByDegree();
    });

    function GetScholarshipFromEndDate() {

        var ScholarshipStartDate = $("#txtScholarshipStartDate").val();
        var ScholarshipEndDate = $("#txtScholarshipEndDate").val();
        if (ScholarshipStartDate != '' && ScholarshipEndDate != '') {
            $.ajax({
                type: "POST",
                url: "@Url.Content("~/Scholarships/GetScholarshipFromEndDate/")" + ScholarshipStartDate + "/" + ScholarshipEndDate,
                success: function (d) {
                    $('#txtScholarshipPeriod').val(d.ScholarshipPeriod);
                },
                error: function (xhr, status, error) {
                    AddingFailure();
                }
            });
        }
        else
            $('#txtScholarshipPeriod').val('');
    }

    function GetScholarshipEndDate() {
        var ScholarshipStartDate = $("#txtScholarshipStartDate").val();
        var ScholarshipPeriod = $("#txtScholarshipPeriod").val();
        if (ScholarshipStartDate != '' && ScholarshipPeriod != '') {
            $.ajax({
                type: "POST",
                url: "@Url.Content("~/Scholarships/GetScholarshipEndDate/")" + ScholarshipPeriod + "/" + ScholarshipStartDate,
                success: function (d) {
                    $('#txtScholarshipEndDate').val(d.Data.data);
                },
                error: function (xhr, status, error) {
                    AddingFailure();
                }
            });
        }
        else
            $('#txtScholarshipEndDate').val('');
    }

    function GetQualificationsByDegree() {
        var QualificationDegreeID = $("#ddlQualificationDegree").val();
        $.ajax({
            type: "get",
            dataType: "json",
            url: "/Qualifications/GetQualifications/" + QualificationDegreeID,
            success: function (d) {
                $("#ddlQualification").html("");
                var qualifications = d.data;
                $.each(qualifications, function (i, qualification) {
                    $("#ddlQualification").append($('<option></option>').val(qualification.QualificationID).html(qualification.QualificationName));
                });
            },
            error: function (xhr, status, error) {
                alert(error.message);
            }
        });
    }
</script>

<table id="tblScholarship" class="table table-responsive table-condensed">
    <tbody>
        <tr class="row">
            <td class="col-md-4">
                @Html.LabelFor(model => model.ScholarshipStartDate, new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                @Html.LabelFor(model => model.ScholarshipPeriod, new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                @Html.LabelFor(model => model.ScholarshipEndDate, new { @class = "control-label" })
            </td>
        </tr>
        <tr class="row">
            <td class="col-md-4">
                @Html.TextBoxFor(model => model.ScholarshipStartDate, new
                    {
                        @class = "form-control",
                        @id = "txtScholarshipStartDate",
                        @readonly = "readonly",
                        @Value = Model.ScholarshipStartDate.HasValue ? Model.ScholarshipStartDate.Value.ToString(@System.Configuration.ConfigurationManager.AppSettings["DateFormat"]) : null
                    })
                @Html.ValidationMessageFor(model => model.ScholarshipStartDate, "", new { @class = "text-danger" })
            </td>
            <td class="col-md-4">
                @Html.TextBoxFor(model => model.ScholarshipPeriod, new { @class = "form-control", @id = "txtScholarshipPeriod", @type = "number" })
            </td>
            <td class="col-md-4">
                @Html.TextBoxFor(model => model.ScholarshipEndDate, new
                    {
                        @class = "form-control",
                        @id = "txtScholarshipEndDate",
                        @readonly = "readonly",
                        @Value = Model.ScholarshipEndDate.HasValue ? Model.ScholarshipEndDate.Value.ToString(@System.Configuration.ConfigurationManager.AppSettings["DateFormat"]) : null
                    })
                @Html.HiddenFor(model => model.ScholarshipType.ScholarshipTypeID)
                @Html.HiddenFor(model => model.ScholarshipID)
            </td>
        </tr>
        <tr class="internalTraining row">
            <td class="col-md-4">
                @Html.LabelFor(model => model.Location, new { @class = "control-label" })
            </td>
            <td class="col-md-4"></td>
            <td class="col-md-4"></td>
        </tr>
        <tr class="internalTraining row">
            <td class="col-md-12" colspan="4">
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @id = "txtScholarshipLocation" })
            </td>
        </tr>
        <tr class="externalTraining row">
            <td class="col-md-4">
                @Html.LabelFor(model => model.QualificationsDegrees, new { @class = "control-label" })
            </td>
            <td class="col-md-4">
                @Html.LabelFor(model => model.Qualifications, new { @class = "control-label" })
            </td>
            <td class="col-md-4"></td>
        </tr>
        <tr class="externalTraining row">
            <td class="col-md-4">
                @Html.DropDownListFor(model => model.QualificationDegree.QualificationDegreeID, new SelectList(new HCMBLL.QualificationsDegreesBLL().GetQualificationsDegrees(), "QualificationDegreeID", "QualificationDegreeName"), new { @id = "ddlQualificationDegree", @style = "width:100%", @onchange = "GetQualificationsByDegree()" })
            </td>
            <td class="col-md-4">
                @Html.DropDownListFor(model => model.Qualification.QualificationID, new SelectList(new HCMBLL.QualificationsBLL().GetQualifications(), "QualificationID", "QualificationName"), new { @id = "ddlQualification", @style = "width:100%" })
            </td>
            <td class="col-md-4"></td>
        </tr>
        <tr class="row">
            <td class="col-md-12" colspan="4">
                @Html.LabelFor(model => model.ScholarshipReason, new { @class = "control-label" })
            </td>
        </tr>
        <tr class="row">
            <td class="col-md-12" colspan="4">
                @Html.TextAreaFor(model => model.ScholarshipReason, new { @class = "form-control", @id = "txtScholarshipReason" })
            </td>
        </tr>
        <tr class="row">
            <td class="col-md-12" colspan="4">
                <input type="submit" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" />
                <input type="reset" class="btn btn-default" value="@Resources.Globalization.ResetText" />
            </td>
        </tr>
    </tbody>
</table>
