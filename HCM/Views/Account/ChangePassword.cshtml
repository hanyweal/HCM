@model HCM.Models.AccountViewModel
@using HCM.Classes.Enums
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = Resources.Globalization.ChangePasswordText;
}

<script type="text/javascript">

    function OnSuccessChangePassword() {
        Reset();
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Success, Globals.Utilities.RemoveSpace(@Resources.Globalization.ChangedPasswordDoneAlertText))');
    }

    function OnFailureChangePassword() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Failure , "Error")');
    }

    function Reset() {
        $("#txtOldPassword").val('');
        $("#txtPassword").val('');
        $("#txtConfirmPassword").val('');
    }
</script>
@using (Ajax.BeginForm("ChangePassword", "Account", new AjaxOptions()
{
    OnSuccess = "OnSuccessChangePassword",
    OnFailure = "OnFailureChangePassword",
    HttpMethod = "POST"
}))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

    <div id="divContent" class="panel panel-default" style="padding:0px;max-height:350px">
        <div class="panel-heading">
            @Resources.Globalization.ChangePasswordText
        </div>
        <div class="panel panel-body">
            <table class="table table-condensed">
                <tr>
                    <td>
                        <div class="alert alert-info col-md-12">
                            @Resources.Globalization.PasswordPolicyText
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OldPassword, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control input-sm", @id = "txtOldPassword" })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.UserID)
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control input-sm", @id = "txtPassword" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control input-sm", @id = "txtConfirmPassword" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            <center>
                                <input type="submit" id="BtnSave" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" />
                            </center>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}



