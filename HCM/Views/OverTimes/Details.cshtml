@model HCM.Models.OverTimesViewModel
@using HCM.Classes.Enums
@using HCMBLL.Enums
@using HCM.Models

@{
    ViewBag.Title = Resources.Globalization.DetailsOverTimeText;
}

<script type="text/javascript">
    function OkFunction() {
        window.location.href = "/OverTimes/Index";
    }

    $(document).ready(function () {
        BindOverTimeEmployees();
        bindOverTimesDays();
    });

    function bindOverTimesDays() {
        var calendar = $.calendars.instance($('islamic').val());
        $('#txtOverTimesDays').calendarsPicker({
            calendar: jQuery.calendars.instance('ummalqura', 'ar'),
            dateFormat: 'yyyy-mm-dd',
            minDate: '@Model.OverTimeStartDate.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"])',
            maxDate: '@Model.OverTimeEndDate.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"])',
            multiSelect: '@Model.OverTimePeriod',
            onDate: function () {
                return { selectable: false };
            }
        });
    }

    function BindOverTimeEmployees() {
        $("#tblOverTimeEmployees").DataTable({
            destroy: true,
            "searching": false,
            "ordering": false,
            "paging": false,
            "ajax": {
                "url": "/OverTimes/GetOverTimeEmployeesByOverTimeID/" + '@Model.OverTimeID',
                "type": "get",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": "EmployeeCareerHistory.EmployeeCode.EmployeeCodeNo",
                    "autowidth": true
                },
                {
                    "data": "EmployeeCareerHistory.EmployeeCode.Employee.EmployeeNameAr",
                    "autowidth": true
                }
            ]
        });
    }
     
</script>
<p style="font-size:larger">@Resources.Globalization.DetailsOverTimeText</p>
<div class="panel panel-default" style="padding:0px">
    <div class="panel-heading">
        @Resources.Globalization.DetailsOverTimeDescText
    </div>
    <div class="panel-body">
        @Html.AntiForgeryToken()
        <span class="control-label">@Resources.Globalization.OverTimeBasicInfoText</span>
        <table class="table table-responsive table-condensed">
            <tbody>
                <tr>
                    <td class="col-md-3">
                        @Html.HiddenFor(model => model.OverTimeID)
                        @Html.LabelFor(model => model.OverTimeStartDate, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.OverTimeStartDate)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.OverTimeEndDate, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.OverTimeEndDate)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.OverTimePeriod, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.OverTimePeriod)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        <label> @Resources.Globalization.AddOverTimesDaysText </label>
                    </td>
                   
                    <td class="col-md-9">
                        @Html.TextBoxFor(model => model.OverTimesDays, new { @class = "form-control", @id = "txtOverTimesDays", @readonly = "readonly", @onClick = "SetSelectedHijri();" })
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.WeekWorkHoursAvg, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.WeekWorkHoursAvg)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.FridayHoursAvg, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.FridayHoursAvg)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.SaturdayHoursAvg, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.SaturdayHoursAvg)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.Requester, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.Requester)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.Tasks, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.Tasks)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.CreatedBy)
                    </td>
                </tr>
                <tr>
                    <td class="col-md-3">
                        @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label" })
                    </td>
                    <td class="col-md-9">
                        @Html.DisplayFor(model => model.CreatedDate)
                    </td>
                </tr>
            </tbody>
        </table>
        <span class="control-label">@Resources.Globalization.EmployeesText</span>

        <table id="tblOverTimeEmployees" class="table table-responsive table-hover" style="width:100%">
                <thead>
                    <tr>
                        <td>@Resources.Globalization.EmployeeCodeNoText</td>
                        <td>@Resources.Globalization.EmployeeNameArText</td> 
                    </tr>
                </thead>
            </table>
             
    </div>
    <div class="panel-footer">
        @using (Html.BeginForm("Index", "OverTimes"))
        {
            <input type="submit" class="btn btn-default" name="BtnBack" value="@Resources.Globalization.BacktoListText" />
        }
    </div>
</div>
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
