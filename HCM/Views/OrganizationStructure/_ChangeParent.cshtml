@model HCM.Models.OrganizationStructureViewModel
@using HCM.Models
@{
    ViewBag.Title = Resources.Globalization.OrganizationStructureText;
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    bool IsCreatePermission = new HCM.Classes.Helpers.PSAHelper().IsCreatePermission(Request.Url.ToString());
    bool IsUpdatePermission = new HCM.Classes.Helpers.PSAHelper().IsUpdatePermission(Request.Url.ToString());
    bool IsDeletePermission = new HCM.Classes.Helpers.PSAHelper().IsDeletePermission(Request.Url.ToString());
}

<script type="text/javascript">
    $(document).ready(function () {
        
        $("#btnParentSave").attr("disabled", false);

        $("#btnParentSave").click(function () {
            if ($("#hdnFldOrganizationParentCode").val() != '') {
                var Organization =
                {
                    OrganizationID: $('#hdnFldOrganizationID').val(),
                    ParentOrganizationID: $('#hdnFldOrganizationParentCode').val(),
                };

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Content("~/OrganizationStructure/EditParent")",
                    data: JSON.stringify(Organization),
                    success: UpdateParentSuccess,
                    error: function (xhr, status, error) {
                        OnFailure();
                    }
                });
            }
            else {
                $("#divAlert").load('@RazorHelper.ShowAlert(this, HCM.Classes.Enums.ModalTypes.Warning, Globals.Utilities.RemoveSpace(@Resources.Globalization.ValidationParentOrganizationShouldChangeAlertText))');
            }
        });

        $("#txtOrganizationParentCode").autocomplete({
            source: function (request, response) {
                // autocomplete starts from 5 char
                var val = $("#txtOrganizationParentCode").val().trim();
                $.ajax({
                    type: "get"
                    , dataType: "json"
                    , contentType: "application/json; charset=utf-8"
                    , url: "GetOrganizationsByName/" + $("#txtOrganizationParentCode").val()
                    , success: function (data) {
                        response($.map(data.data, function (item) {
                            return { label: item.OrganizationNameWithBranch, value: item.OrganizationID }
                        }));
                    }
                    , error: function (xhr, status, error) {
                    }
                });
            },
            focus: function (event, ui) {
                $(this).val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $(this).val(ui.item.label);
                $("#hdnFldOrganizationParentCode").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $(this).val(ui.item != null ? ui.item.label : "");
                $("#hdnFldOrganizationParentCode").val(ui.item != null ? ui.item.value : "");
                return false;
            }
        });

    });

    function UpdateParentSuccess(data) {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, HCM.Classes.Enums.ModalTypes.Success, Globals.Utilities.RemoveSpace(@Resources.Globalization.SavedDoneAlertText))'); 
        if (chart) {
            chart.updateNode(data);
            //chart.find(data.OrganizationName);
            //chart.center(data.OrganizationID, {
            //    parentState: OrgChart.COLLAPSE_PARENT_NEIGHBORS,
            //    parentState: OrgChart.COLLAPSE_SUB_CHILDRENS,
            //    rippleId: 1,
            //    vertical: true,
            //    horizontal: false
            //});
        }
        ResetParentOrganization();
    }

    function OnFailure() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, HCM.Classes.Enums.ModalTypes.Failure, "/Error")');
    }

    function GetByOrganizationID(OrganizationID) {
        $.ajax({
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            url: "/OrganizationStructure/GetByOrganizationID",
            data: "{ 'id' :" + OrganizationID + "}",
            success: function (d) { 
                $('#txtOrganizationParentCode').val(d.data.OrganizationNameWithBranch); 
            },
            error: function (xhr, status, error) {
                $("#divAlert").load('@RazorHelper.ShowAlert(this, HCM.Classes.Enums.ModalTypes.Failure, "/Error")'); 
            }
        });
    }

    function ResetParentOrganization() { 
        $('#txtOrganizationParentCode').val('');
        //$("#btnParentSave").attr("disabled", true);
        $("#hdnFldOrganizationParentCode").val('');
    }
     
     
</script>

<div class="panel panel-default" style="padding:0px">
    <div class="panel-heading">
        @Resources.Globalization.OrganizationParentText
    </div>
    <div class="panel-body">
        <table class="table table-responsive table-condensed table-striped">
            <tr>
                <td class="col-md-4">
                    @Html.LabelFor(model => model.OrganizationName, new { @class = "control-label" })
                </td>
                <td class="col-md-4"></td>
                <td class="col-md-4"></td>
            </tr>
            <tr>
                <td class="col-md-12">
                    <input type="text" id="txtOrganizationParentCode" class="form-control" />
                    <input type="hidden" id="hdnFldOrganizationParentCode" />
                </td>
                <td class="col-md-4"></td>
            </tr>
        </table>
    </div>
    <div class="panel-footer">
        <div class="row">
            <div class="col-md-9"></div>
            <div class="col-md-3">
                @if (IsUpdatePermission)
                {
                    <input id="btnParentSave" type="submit" class="btn btn-default" value="@Resources.Globalization.SaveText" disabled="disabled" />
                }
            </div>
        </div>
    </div>
</div>