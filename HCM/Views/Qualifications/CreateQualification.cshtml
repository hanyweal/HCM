@model HCM.Models.QualificationsViewModel
@using HCM.Models;
@using HCM.Classes.Enums;
@using HCMBLL.Enums

@{
    ViewBag.Title = @Resources.Globalization.AddNewQualificationText;
}
<script type="text/javascript">
    function OnSuccess() {
        Reset();
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Success, Globals.Utilities.RemoveSpace(@Resources.Globalization.SavedDoneAlertText))');
    }
    function OnFailure() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Failure, "Error")');
    }
    function AddingSuccess() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Success, Globals.Utilities.RemoveSpace(@Resources.Globalization.AddingDoneText))');
    }
    function AddingFailure() {
        $("#divAlert").load('@RazorHelper.ShowAlert(this, ModalTypes.Failure, "Error")');
    }
    function Reset() {
        $("#txtQualificationName").val("");
        $("#txtDirectPoints").val("");
        $("#txtIndirectPoints").val("");
    }
</script>
<p style="font-size:larger">@Resources.Globalization.AddNewQualificationText</p>
<div class="panel panel-default" style="padding:0px">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-9">
                @Resources.Globalization.AddNewQualificationDescText
            </div>
            <div class="col-md-3" style="text-align:left">
                @Html.Action("Index", "BusinessRules", new { id = (Int32)BusinessSubCategoriesEnum.Qualifications })
            </div>
        </div>
    </div>
    <div class="panel-body">
        @using (Ajax.BeginForm("CreateQualification", "Qualifications", new AjaxOptions()
        {
            OnSuccess = "OnSuccess",
            OnFailure = "OnFailure",
            HttpMethod = "POST",
        }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true)
            <span class="control-label">@Resources.Globalization.QualificationBasicInfoText</span><br />
            <table class="table table-responsive table-condensed table-striped">
                <tbody>
                    <tr>
                       
                        <td>@Html.LabelFor(model => model.QualificationDegreeID, new { @class = "control-label" })</td>
                        <td>@Html.LabelFor(model => model.QualificationName, new { @class = "control-label" })</td>
                        <td>@Html.LabelFor(model => model.DirectPoints, new { @class = "control-label" })</td>
                    </tr>
                    <tr>
                       
                        <td>@Html.DropDownListFor(model => model.QualificationDegreeID, new SelectList(new HCMBLL.QualificationsDegreesBLL().GetQualificationsDegrees(), "QualificationDegreeID", "QualificationDegreeName"), new { @id = "ddlQualificationDegree", @style = "width:100%" })</td>
                        <td>
                            @Html.TextBoxFor(model => model.QualificationName, new { @class = "form-control", @id = "txtQualificationName" })
                            @Html.ValidationMessageFor(model => model.QualificationName, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.DirectPoints, new { @class = "form-control allownumericwithdecimal", @id = "txtDirectPoints" })
                            @Html.ValidationMessageFor(model => model.DirectPoints, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.IndirectPoints, new { @class = "control-label" })</td>
                        <td></td>
                        <td> </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.TextBoxFor(model => model.IndirectPoints, new { @class = "form-control allownumericwithdecimal", @id = "txtIndirectPoints" })
                            @Html.ValidationMessageFor(model => model.IndirectPoints, "", new { @class = "text-danger" })
                        </td>
                        <td></td>
                        <td> </td>
                    </tr>
                </tbody>
            </table>

            <table class="table table-responsive table-condensed">
                <tr>
                    <td>
                        <div class="form-group">
                            <center>
                                <input type="submit" class="btn btn-default" name="BtnSave" value="@Resources.Globalization.SaveText" />
                                <input type="reset" class="btn btn-default" value="@Resources.Globalization.ResetText" onclick="Reset();" />
                            </center>
                        </div>
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="panel-footer">
        @using (Html.BeginForm("Index", "Qualifications"))
        {
            <input type="submit" class="btn btn-default" name="BtnBack" value="@Resources.Globalization.BacktoListText" />
        }
    </div>
</div>
