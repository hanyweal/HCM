using HCMBLL.Enums;
using HCMDAL;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HCMBLL
{
    public class JobsGeneralGroupsBLL : CommonEntity,IEntity
    {
        public virtual int JobGeneralGroupID
        {
            get;
            set;
        }

        public virtual string JobGeneralGroupName
        {
            get;
            set;
        }

        public virtual IEnumerable<JobsGroupsBLL> JobsGroupsBLL
        {
            get;
            set;
        }

        public virtual Result Add()
        {
            Result result = null;
            result = new Result();
            JobsGeneralGroups JobGeneralGroup = new JobsGeneralGroups();
            JobGeneralGroup.JobGeneralGroupName = this.JobGeneralGroupName;
            JobGeneralGroup.CreatedDate = DateTime.Now;
            JobGeneralGroup.CreatedBy = this.LoginIdentity.EmployeeCodeID;
            this.JobGeneralGroupID = new JobsGeneralGroupsDAL().Insert(JobGeneralGroup);
            if (this.JobGeneralGroupID != 0)
            {
                result.Entity = this;
                result.EnumType = typeof(LookupsValidationEnum);
                result.EnumMember = LookupsValidationEnum.Done.ToString();
            }

            return result;
        }

        public virtual Result Remove(int JobCategoryID)
        {
            try
            {
                Result result = null;
                new JobsGeneralGroupsDAL().Delete(JobCategoryID, this.LoginIdentity.EmployeeCodeID);
                return result = new Result()
                {
                    EnumType = typeof(LookupsValidationEnum),
                    EnumMember = LookupsValidationEnum.Done.ToString()
                };
            }
            catch
            {
                throw;
            }
        }

        public virtual Result Update()
        {
            Result result = new Result();
            JobsGeneralGroups JobGeneralGroup = new JobsGeneralGroups();
            JobGeneralGroup.JobGeneralGroupID = this.JobGeneralGroupID;
            JobGeneralGroup.JobGeneralGroupName = this.JobGeneralGroupName;
            JobGeneralGroup.LastUpdatedDate = DateTime.Now;
            JobGeneralGroup.LastUpdatedBy = this.LoginIdentity.EmployeeCodeID;
            this.JobGeneralGroupID = new JobsGeneralGroupsDAL().Update(JobGeneralGroup);
            if (this.JobGeneralGroupID != 0)
            {
                result.Entity = this;
                result.EnumType = typeof(LookupsValidationEnum);
                result.EnumMember = LookupsValidationEnum.Done.ToString();
            }
            return result;
        }

        public virtual List<JobsGeneralGroupsBLL> GetJobsGeneralGroups()
        {

            List<JobsGeneralGroups> JobsGeneralGroupsList = new JobsGeneralGroupsDAL().GetJobsGeneralGroups();
            List<JobsGeneralGroupsBLL> JobsGeneralGroupsBLLList = new List<JobsGeneralGroupsBLL>();
            if (JobsGeneralGroupsList.Count > 0)
            {
                foreach (var item in JobsGeneralGroupsList)
                {
                    JobsGeneralGroupsBLLList.Add(new JobsGeneralGroupsBLL().MapJobGeneralGroup(item));
                }
            }

            return JobsGeneralGroupsBLLList;
        }

        public virtual JobsGeneralGroupsBLL GetByJobGeneralGroupID(int JobGeneralGroupID)
        {
            JobsGeneralGroups JobGeneralGroup = new JobsGeneralGroupsDAL().GetByJobGeneralGroupID(JobGeneralGroupID);
            JobsGeneralGroupsBLL JobsGeneralGroupsBLL = new JobsGeneralGroupsBLL();
            if (JobGeneralGroup != null)
            {
                if (JobGeneralGroup.JobGeneralGroupID > 0)
                {
                    return new JobsGeneralGroupsBLL().MapJobGeneralGroup(JobGeneralGroup);
                }
            }
            return null;
        }

        public JobsGeneralGroupsBLL MapJobGeneralGroup(JobsGeneralGroups JobGeneralGroup)
        {
            try
            {
                JobsGeneralGroupsBLL JobGeneralGroupBLL = null;
                if (JobGeneralGroup != null)
                {
                    JobGeneralGroupBLL = new JobsGeneralGroupsBLL()
                    {
                        JobGeneralGroupID = JobGeneralGroup.JobGeneralGroupID,
                        JobGeneralGroupName = JobGeneralGroup.JobGeneralGroupName,
                    };
                }
                return JobGeneralGroupBLL;
            }
            catch
            {
                throw;
            }
        }
    }
}

