using HCMBLL.Enums;
using HCMDAL;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HCMBLL
{
    public class ExactSpecializationsBLL : CommonEntity, IEntity
    {
        public virtual int ExactSpecializationID
        {
            get;
            set;
        }
        public virtual string ExactSpecializationName
        {
            get;
            set;
        }
        public virtual GeneralSpecializationsBLL GeneralSpecialization
        {
            get;
            set;
        }
        public List<ExactSpecializationsBLL> GetExactSpecializations()
        {
            List<ExactSpecializationsBLL> ExactSpecializationsBLLList = new List<ExactSpecializationsBLL>();
            List<ExactSpecializations> ExactSpecializationsList = new ExactSpecializationsDAL().GetExactSpecializations();
            foreach (var ExactSpecialization in ExactSpecializationsList)
            {
                ExactSpecializationsBLLList.Add(this.MapExactSpecialization(ExactSpecialization));
            }
            return ExactSpecializationsBLLList;
        }
        public virtual ExactSpecializationsBLL GetByExactSpecializationID(int ExactSpecializationID)
        {
            return GetExactSpecializations().SingleOrDefault(x => x.ExactSpecializationID.Equals(ExactSpecializationID));
        }
        public List<ExactSpecializationsBLL> GetByGeneralSpecializationID(int GeneralSpecializationID)
        {
            List<ExactSpecializationsBLL> ExactSpecializationsBLLList = new List<ExactSpecializationsBLL>();
            List<ExactSpecializations> ExactSpecializationsList = new ExactSpecializationsDAL().GetByGeneralSpecializationID(GeneralSpecializationID);
            foreach (var ExactSpecialization in ExactSpecializationsList)
            {
                ExactSpecializationsBLLList.Add(this.MapExactSpecialization(ExactSpecialization));
            }
            return ExactSpecializationsBLLList;
           // return GetExactSpecializations().Where(x => x.GeneralSpecialization.GeneralSpecializationID.Equals(GeneralSpecializationID)).ToList();
        }
        public virtual Result Add()
        {
            try
            {
                Result result = null;
                ExactSpecializations ExactSpecialization = new ExactSpecializations();
                ExactSpecialization.GeneralSpecializationID = this.GeneralSpecialization.GeneralSpecializationID;
                ExactSpecialization.ExactSpecializationName = this.ExactSpecializationName;  //QualificationDegreeID             
                ExactSpecialization.CreatedDate = DateTime.Now;
                ExactSpecialization.CreatedBy = this.LoginIdentity.EmployeeCodeID;
                this.ExactSpecializationID = new ExactSpecializationsDAL().Insert(ExactSpecialization);

                result = new Result();
                result.Entity = this;
                result.EnumType = typeof(ExactSpecializationsValidationEnum);
                result.EnumMember = ExactSpecializationsValidationEnum.Done.ToString();
                return result;
            }
            catch
            {
                throw;
            }
        }
        public virtual Result Update()
        {
            try
            {
                Result result = null;

                #region Validation for GeneralSpecializationID EmployeeQualifications
                EmployeesQualificationsBLL EmployeeQualificationBLL = new EmployeesQualificationsBLL().GetByExactSpecializationID(this.ExactSpecializationID);
                if (EmployeeQualificationBLL != null)
                {
                    if (EmployeeQualificationBLL.GeneralSpecialization.GeneralSpecializationID != this.GeneralSpecialization.GeneralSpecializationID)
                    {
                        result = new Result();
                        result.Entity = null;
                        result.EnumType = typeof(ExactSpecializationsValidationEnum);
                        result.EnumMember = ExactSpecializationsValidationEnum.RejectedBecauseOfThisExactSpecializationExistsInEmployeesQualifications.ToString();
                        return result;
                    }
                }
                #endregion    
                
                ExactSpecializations ExactSpecialization = new ExactSpecializations();
                ExactSpecialization.ExactSpecializationID = this.ExactSpecializationID;
                ExactSpecialization.GeneralSpecializationID = this.GeneralSpecialization.GeneralSpecializationID;
                ExactSpecialization.ExactSpecializationName = this.ExactSpecializationName;  //QualificationDegreeID
                ExactSpecialization.LastUpdatedDate = DateTime.Now;
                ExactSpecialization.LastUpdatedBy = this.LoginIdentity.EmployeeCodeID;
                int UpdateResult = new ExactSpecializationsDAL().Update(ExactSpecialization); 
                if (UpdateResult != 0)
                {
                    result = new Result();
                    result.Entity = this;
                    result.EnumType = typeof(ExactSpecializationsValidationEnum);
                    result.EnumMember = ExactSpecializationsValidationEnum.Done.ToString();
                }

                return result;
            }
            catch
            {
                throw;
            }
        }
        public Result Remove(int ExactSpecializationID)
        {
            try
            {
                Result result = null;
                new ExactSpecializationsDAL().Delete(ExactSpecializationID, this.LoginIdentity.EmployeeCodeID);
                return result = new Result()
                {
                    EnumType = typeof(ExactSpecializationsValidationEnum),
                    EnumMember = ExactSpecializationsValidationEnum.Done.ToString()
                };
            }
            catch
            {
                throw;
            }
        }
        internal ExactSpecializationsBLL MapExactSpecialization(ExactSpecializations item)
        {
            return item != null ?
                new ExactSpecializationsBLL()
                    {
                        ExactSpecializationID = item.ExactSpecializationID,
                        ExactSpecializationName = item.ExactSpecializationName,
                        GeneralSpecialization = item.GeneralSpecializationID.HasValue ? new GeneralSpecializationsBLL().MapGeneralSpecialization(item.GeneralSpecializations) : null,                       
                        CreatedBy = item.CreatedBy.HasValue ? new EmployeesCodesBLL().MapEmployeeCode(item.EmployeesCodes) : null,
                        CreatedDate = item.CreatedDate.Value
                    }
                : null;
        }
    }
}
