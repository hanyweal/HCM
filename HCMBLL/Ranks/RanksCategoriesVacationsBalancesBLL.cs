using HCMDAL;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HCMBLL
{
    public class RanksCategoriesVacationsBalancesBLL : CommonEntity
    {
        public int RankCategoryVacationBalanceID { get; set; }

        public virtual RanksCategoriesBLL RankCategory
        {
            get;
            set;
        }

        public virtual VacationsTypesBLL VacationType 
        {
            get;
            set;
        }

        public double VacationBalance { get; set; }

        public virtual List<RanksCategoriesVacationsBalancesBLL> GetRanksCategoriesVacationsBalances()
        {
            List<RanksCategoriesVacationsBalances> RanksCategoriesVacationsBalancesList = new RanksCategoriesVacationsBalancesDAL().GetRanksCategoriesVacationsBalances();
            List<RanksCategoriesVacationsBalancesBLL> RanksCategoriesVacationsBalancesBLLList = new List<RanksCategoriesVacationsBalancesBLL>();
            if (RanksCategoriesVacationsBalancesList.Count > 0)
            {
                foreach (var item in RanksCategoriesVacationsBalancesList)
                {
                    RanksCategoriesVacationsBalancesBLLList.Add(MapRankCategoryVacationBalance(item));
                }
            }

            return RanksCategoriesVacationsBalancesBLLList;
        }

        public float GetByRankCategoryIDVacationTypeID(int RankCategoryID, int VacationTypeID)
        {
            RanksCategoriesVacationsBalances bal = new RanksCategoriesVacationsBalancesDAL().GetByRankCategoryIDVacationTypeID(RankCategoryID, VacationTypeID);
            if (bal != null && bal.RankCategoryVacationBalanceID > 0)
                return (float)bal.VacationBalance;
            else
                return 0;
        }

        public RanksCategoriesVacationsBalancesBLL GetByID(int RankCategoryVacationBalanceID)
        {
            return GetRanksCategoriesVacationsBalances().SingleOrDefault(x => x.RankCategoryVacationBalanceID.Equals(RankCategoryVacationBalanceID));
        }

        public virtual int Add()
        {
            throw new System.NotImplementedException();
        }

        public virtual int Remove()
        {
            throw new System.NotImplementedException();
        }

        public virtual int Update()
        {
            throw new System.NotImplementedException();
        }

        public RanksCategoriesVacationsBalancesBLL MapRankCategoryVacationBalance(RanksCategoriesVacationsBalances item)
        {
            return item != null ? new RanksCategoriesVacationsBalancesBLL()
                        {
                            RankCategoryVacationBalanceID = item.RankCategoryVacationBalanceID,
                            RankCategory = new RanksCategoriesBLL().MapRanksCategories(item.RanksCategories),
                            VacationType = new VacationsTypesBLL().MapVacationsTypes(item.VacationsTypes),
                            VacationBalance = item.VacationBalance
                        } 
            : null;
        }

    }
}

