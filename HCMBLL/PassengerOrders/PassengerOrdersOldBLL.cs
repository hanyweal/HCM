using HCMBLL.Enums;
using HCMDAL;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HCMBLL
{
    public class PassengerOrdersOldBLL : CommonEntity, IEntity
    {
        //public virtual int PassengerOrderID
        //{
        //    get;
        //    set;
        //}

        //public PassengerOrdersTypesBLL PassengerOrderType { get; set; }

        //public IPassengerOrderTypeDetails Details { get; set; }

        //public virtual DateTime TravellingDate
        //{
        //    get;
        //    set;
        //}

        //public virtual RanksBLL Rank
        //{
        //    get;
        //    set;
        //}

        //public virtual TicketsClassesBLL TicketClass
        //{
        //    get;
        //    set;
        //}

        //public bool Going { get; set; }

        //public bool Returning { get; set; }

        //internal virtual PassengerOrders DALInstance
        //{
        //    get
        //    {
        //        PassengerOrders PassengerOrder = new PassengerOrders();
        //        PassengerOrder.PassengerOrderTypeID = (int)this.PassengerOrderType.PassengerOrderTypeID;
        //        PassengerOrder.DetailID = this.Details.DetailID;
        //        PassengerOrder.RankID = this.Rank.RankID;
        //        PassengerOrder.TicketClassID = this.TicketClass.TicketClassID;
        //        PassengerOrder.TravellingDate = this.TravellingDate;
        //        PassengerOrder.Going = this.Going;
        //        PassengerOrder.Returning = this.Returning;
        //        if (this.PassengerOrderID <= 0)
        //        {
        //            PassengerOrder.CreatedDate = DateTime.Now;
        //            PassengerOrder.CreatedBy = LoginIdentity.EmployeeCodeID;
        //            foreach (PassengerOrdersItinerariesBLL dd in this.PassengerOrdersItineraries)
        //            {
        //                PassengerOrder.PassengerOrdersItineraries.Add(new PassengerOrdersItineraries()
        //                {
        //                    FromCity = dd.FromCity,
        //                    ToCity = dd.ToCity,
        //                    CreatedDate = DateTime.Now
        //                });
        //            }
        //        }
        //        else
        //        {
        //            PassengerOrder.PassengerOrderID = this.PassengerOrderID;
        //            PassengerOrder.LastUpdatedDate = DateTime.Now;
        //            PassengerOrder.LastUpdatedBy = this.LoginIdentity.EmployeeCodeID;
        //        }
        //        return PassengerOrder;
        //    }
        //}

        //public virtual List<PassengerOrdersItinerariesBLL> PassengerOrdersItineraries
        //{
        //    get;
        //    set;
        //}

        //public virtual List<PassengerOrdersBLL> GetPassengerOrders(out int totalRecordsOut, out int recFilterOut)
        //{
        //    List<PassengerOrdersBLL> PassengerOrderBLLList = new List<PassengerOrdersBLL>();
        //    List<PassengerOrders> PassengerOrders = new PassengerOrdersDAL()
        //    {
        //        search = Search,
        //        order = Order,
        //        orderDir = OrderDir,
        //        startRec = StartRec,
        //        pageSize = PageSize
        //    }.GetPassengerOrders(out totalRecordsOut, out recFilterOut);
        //    foreach (var item in PassengerOrders)
        //    {
        //        PassengerOrderBLLList.Add(new PassengerOrdersBLL().MapPassengerOrder(item));
        //    }
        //    return PassengerOrderBLLList;
        //}

        //public virtual List<PassengerOrdersBLL> GetPassengerOrders()
        //{
        //    List<PassengerOrdersBLL> PassengerOrderBLLList = new List<PassengerOrdersBLL>();
        //    List<PassengerOrders> PassengerOrders = new PassengerOrdersDAL()
        //    .GetPassengerOrders();
        //    foreach (var item in PassengerOrders)
        //    {
        //        PassengerOrderBLLList.Add(new PassengerOrdersBLL().MapPassengerOrder(item));
        //    }
        //    return PassengerOrderBLLList;
        //}

        //public PassengerOrdersBLL GetByPassengerOrderID(int PassengerOrderID)
        //{
        //    PassengerOrdersBLL PassengerOrderBLL = null;
        //    PassengerOrders PassengerOrder = new PassengerOrdersDAL().GetByPassengerOrderID(PassengerOrderID);
        //    if (PassengerOrder != null)
        //    {
        //        PassengerOrderBLL = new PassengerOrdersBLL().MapPassengerOrder(PassengerOrder);
        //    }
        //    return PassengerOrderBLL;
        //}

        //public virtual Result Add()
        //{
        //    Result result = new Result();

        //    // validate employees PassengerOrder
        //    if (DALInstance.PassengerOrdersItineraries == null || DALInstance.PassengerOrdersItineraries.Count <= 0)
        //    {
        //        result.Entity = null;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.RejectedBecauseItineraryRequired.ToString();

        //        return result;
        //    }

        //    if (IsPassengerOrderAlreadyTook(DALInstance.DetailID, DALInstance.PassengerOrderTypeID.Value))
        //    {
        //        result.Entity = null;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.RejectedBecausePassengerOrderAlreadyTook.ToString();

        //        return result;
        //    }
        //    if (IsPassengerOrderCompensation(DALInstance.DetailID, DALInstance.PassengerOrderTypeID.Value))
        //    {
        //        result.Entity = null;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.RejectedBecausePassengerOrderCompensation.ToString();

        //        return result;
        //    }

        //    result = new Result();
        //    PassengerOrders PassengerOrder = DALInstance;
        //    PassengerOrder.CreatedBy = this.LoginIdentity.EmployeeCodeID;
        //    this.PassengerOrderID = new PassengerOrdersDAL().Insert(PassengerOrder);
        //    if (this.PassengerOrderID != 0)
        //    {
        //        result.Entity = this;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.Done.ToString();
        //    }
        //    return result;
        //}

        //public Result Update()
        //{
        //    Result result = new Result();

        //    List<PassengerOrdersItinerariesBLL> PassengerOrdersItinerariesBLL = new PassengerOrdersItinerariesBLL().GetPassengerOrdersItinerariesByPassengerOrderID(this.PassengerOrderID);

        //    // validate i  
        //    if (PassengerOrdersItinerariesBLL == null || PassengerOrdersItinerariesBLL.Count <= 0)
        //    {
        //        result = new Result();
        //        result.Entity = null;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.RejectedBecauseItineraryRequired.ToString();

        //        return result;
        //    }

        //    if (IsPassengerOrderAlreadyTook(DALInstance.DetailID, DALInstance.PassengerOrderTypeID.Value))
        //    {
        //        result.Entity = null;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.RejectedBecausePassengerOrderAlreadyTook.ToString();

        //        return result;
        //    }

        //    result = new Result();
        //    PassengerOrders PassengerOrder = DALInstance;
        //    PassengerOrder.LastUpdatedBy = this.LoginIdentity.EmployeeCodeID;
        //    this.PassengerOrderID = new PassengerOrdersDAL().Update(PassengerOrder);
        //    if (this.PassengerOrderID != 0)
        //    {
        //        result.Entity = this;
        //        result.EnumType = typeof(PassengerOrdersValidationEnum);
        //        result.EnumMember = PassengerOrdersValidationEnum.Done.ToString();
        //    }
        //    return result;
        //}

        //public Result Remove(int PassengerOrderID)
        //{
        //    try
        //    {
        //        Result result = null;
        //        new PassengerOrdersDAL().Delete(new PassengerOrders() { PassengerOrderID = PassengerOrderID }, this.LoginIdentity.EmployeeCodeID);
        //        return result = new Result()
        //        {
        //            EnumType = typeof(PassengerOrdersValidationEnum),
        //            EnumMember = PassengerOrdersValidationEnum.Done.ToString()
        //        };
        //    }
        //    catch
        //    {
        //        throw;
        //    }
        //}

        //private bool IsPassengerOrderAlreadyTook(int DetailID, int PassengerOrderTypeID)
        //{
        //    PassengerOrders PassengerOrder = new PassengerOrdersDAL().IsPassengerOrderAlreadyTook(DetailID, PassengerOrderTypeID);
        //    if (PassengerOrder == null)
        //        return false;
        //    else if (this.PassengerOrderID > 0 && PassengerOrder.PassengerOrderID == this.PassengerOrderID)            // means edit
        //        return false;
        //    else
        //        return true;
        //}
        //private bool IsPassengerOrderCompensation(int DetailID, int PassengerOrderTypeID)
        //{
        //    switch (PassengerOrderTypeID)
        //    {
        //        case (int)PassengerOrdersTypesEnum.Delegation:
        //            return new DelegationsDetailsBLL().GetDelegationsDetailsByDelegationDetailID(DetailID).IsPassengerOrderCompensation;
        //        case (int)PassengerOrdersTypesEnum.InternshipScholarship:
        //           return new InternshipScholarshipsDetailsBLL().GetInternshipScholarshipsDetailsByInternshipScholarshipDetailID(DetailID).IsPassengerOrderCompensation;
        //        default:
        //            return false;
        //    }
        //}

        //internal PassengerOrdersBLL MapPassengerOrder(PassengerOrders PassengerOrder)
        //{
        //    try
        //    {
        //        PassengerOrdersBLL PassengerOrderBLL = null;
        //        if (PassengerOrder != null)
        //        {
        //            PassengerOrderBLL = new PassengerOrdersBLL()
        //            {
        //                PassengerOrderID = PassengerOrder.PassengerOrderID,
        //                TravellingDate = PassengerOrder.TravellingDate,
        //                Going = PassengerOrder.Going,
        //                Returning = PassengerOrder.Returning.HasValue ? PassengerOrder.Returning.Value : false,
        //                CreatedDate = PassengerOrder.CreatedDate,
        //                TicketClass = new TicketsClassesBLL().MapTicketClass(PassengerOrder.TicketsClasses),
        //                Rank = new RanksBLL().MapRank(PassengerOrder.Ranks),
        //                CreatedBy = new EmployeesCodesBLL().MapEmployeeCode(PassengerOrder.CreatedByNav),
        //                PassengerOrderType = new PassengerOrdersTypesBLL().MapPassengerOrderType(PassengerOrder.PassengerOrdersTypes)
        //            };

        //            if (PassengerOrder.PassengerOrderTypeID == (int)PassengerOrdersTypesEnum.Delegation)
        //            {
        //                //PassengerOrderBLL.PassengerOrderType.PassengerOrderTypeID =(int) PassengerOrdersTypesEnum.Delegation;
        //                PassengerOrderBLL.Details = new DelegationPassengerOrderBLL().GetDetails(PassengerOrder.DetailID);
        //            }
        //            else if (PassengerOrder.PassengerOrderTypeID == (int)PassengerOrdersTypesEnum.InternshipScholarship)
        //            {
        //                //PassengerOrderBLL.PassengerOrderType.PassengerOrderTypeID = (int)PassengerOrdersTypesEnum.InternshipScholarship;
        //                PassengerOrderBLL.Details = new InternshipsScholarshipPassengerOrderBLL().GetDetails(PassengerOrder.DetailID);
        //            }
        //        }
        //        return PassengerOrderBLL;
        //    }
        //    catch
        //    {
        //        throw;
        //    }
        //}
    }
}